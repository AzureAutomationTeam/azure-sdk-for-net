// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for DscConfigurationOperations.
    /// </summary>
    public static partial class DscConfigurationOperationsExtensions
    {
            /// <summary>
            /// Delete the dsc configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            public static void Delete(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName)
            {
                ((IDscConfigurationOperations)operations).DeleteAsync(resourceGroupName, automationAccountName, configurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete the dsc configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task DeleteAsync(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, automationAccountName, configurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve the configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            public static DscConfiguration Get(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName)
            {
                return ((IDscConfigurationOperations)operations).GetAsync(resourceGroupName, automationAccountName, configurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<DscConfiguration> GetAsync(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, configurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create the configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The create or update parameters for configuration.
            /// </param>
            /// <param name='parameters'>
            /// The create or update parameters for configuration.
            /// </param>
            public static DscConfiguration CreateOrUpdate(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName, DscConfigurationCreateOrUpdateParameters parameters)
            {
                return ((IDscConfigurationOperations)operations).CreateOrUpdateAsync(resourceGroupName, automationAccountName, configurationName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create the configuration identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The create or update parameters for configuration.
            /// </param>
            /// <param name='parameters'>
            /// The create or update parameters for configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<DscConfiguration> CreateOrUpdateAsync(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName, DscConfigurationCreateOrUpdateParameters parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, automationAccountName, configurationName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the configuration script identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            public static System.IO.Stream GetContent(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName)
            {
                return ((IDscConfigurationOperations)operations).GetContentAsync(resourceGroupName, automationAccountName, configurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the configuration script identified by configuration name.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='configurationName'>
            /// The configuration name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.IO.Stream> GetContentAsync(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, string configurationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                var _result = await operations.GetContentWithHttpMessagesAsync(resourceGroupName, automationAccountName, configurationName, null, cancellationToken).ConfigureAwait(false);
                _result.Request.Dispose();
                return _result.Body;
            }

            /// <summary>
            /// Retrieve a list of configurations.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<DscConfiguration> ListByAutomationAccount(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName)
            {
                return ((IDscConfigurationOperations)operations).ListByAutomationAccountAsync(resourceGroupName, automationAccountName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of configurations.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<DscConfiguration>> ListByAutomationAccountAsync(this IDscConfigurationOperations operations, string resourceGroupName, string automationAccountName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountWithHttpMessagesAsync(resourceGroupName, automationAccountName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of configurations.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<DscConfiguration> ListByAutomationAccountNext(this IDscConfigurationOperations operations, string nextPageLink)
            {
                return ((IDscConfigurationOperations)operations).ListByAutomationAccountNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of configurations.
            /// <see href="http://aka.ms/azureautomationsdk/configurationoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<DscConfiguration>> ListByAutomationAccountNextAsync(this IDscConfigurationOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
