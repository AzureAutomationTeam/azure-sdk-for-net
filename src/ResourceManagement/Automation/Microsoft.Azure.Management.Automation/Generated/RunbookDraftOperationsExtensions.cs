// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for RunbookDraftOperations.
    /// </summary>
    public static partial class RunbookDraftOperationsExtensions
    {
            /// <summary>
            /// Retrieve the content of runbook draft identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static System.IO.Stream GetContent(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((IRunbookDraftOperations)operations).GetContentAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the content of runbook draft identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.IO.Stream> GetContentAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                var _result = await operations.GetContentWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false);
                _result.Request.Dispose();
                return _result.Body;
            }

            /// <summary>
            /// Updates the runbook draft with runbookStream as its content.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='runbookContent'>
            /// The runbook draft content.
            /// </param>
            public static void CreateOrUpdate(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.IO.Stream runbookContent)
            {
                ((IRunbookDraftOperations)operations).CreateOrUpdateAsync(resourceGroupName, automationAccountName, runbookName, runbookContent).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the runbook draft with runbookStream as its content.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='runbookContent'>
            /// The runbook draft content.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task CreateOrUpdateAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.IO.Stream runbookContent, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, runbookContent, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve the runbook draft identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static RunbookDraft Get(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((IRunbookDraftOperations)operations).GetAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the runbook draft identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<RunbookDraft> GetAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Publish runbook draft.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the publish runbook operation.
            /// </param>
            public static Runbook Publish(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((IRunbookDraftOperations)operations).PublishAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Publish runbook draft.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the publish runbook operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Runbook> PublishAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.PublishWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the runbook identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static RunbookDraftUndoEditResult UndoEdit(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((IRunbookDraftOperations)operations).UndoEditAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the runbook identified by runbook name.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<RunbookDraftUndoEditResult> UndoEditAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.UndoEditWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the runbook draft with runbookStream as its content.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='runbookContent'>
            /// The runbook draft content.
            /// </param>
            public static void BeginCreateOrUpdate(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.IO.Stream runbookContent)
            {
                ((IRunbookDraftOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, automationAccountName, runbookName, runbookContent).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the runbook draft with runbookStream as its content.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='runbookContent'>
            /// The runbook draft content.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task BeginCreateOrUpdateAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.IO.Stream runbookContent, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, runbookContent, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Publish runbook draft.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the publish runbook operation.
            /// </param>
            public static Runbook BeginPublish(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((IRunbookDraftOperations)operations).BeginPublishAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Publish runbook draft.
            /// <see href="http://aka.ms/azureautomationsdk/runbookdraftoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the publish runbook operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Runbook> BeginPublishAsync(this IRunbookDraftOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.BeginPublishWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
