// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Definition of the dsc node type.
    /// </summary>
    public partial class DscNode : Resource
    {
        /// <summary>
        /// Initializes a new instance of the DscNode class.
        /// </summary>
        public DscNode()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscNode class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="lastSeen">Gets or sets the last seen time of the
        /// node.</param>
        /// <param name="registrationTime">Gets or sets the registration time
        /// of the node.</param>
        /// <param name="ip">Gets or sets the ip of the node.</param>
        /// <param name="accountId">Gets or sets the account id of the
        /// node.</param>
        /// <param name="nodeConfiguration">Gets or sets the configuration of
        /// the node.</param>
        /// <param name="status">Gets or sets the status of the node.</param>
        /// <param name="nodeId">Gets or sets the node id.</param>
        /// <param name="etag">Gets or sets the etag of the resource.</param>
        public DscNode(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.DateTime? lastSeen = default(System.DateTime?), System.DateTime? registrationTime = default(System.DateTime?), string ip = default(string), string accountId = default(string), DscNodeConfigurationAssociationProperty nodeConfiguration = default(DscNodeConfigurationAssociationProperty), string status = default(string), string nodeId = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            this.LastSeen = lastSeen;
            this.RegistrationTime = registrationTime;
            this.Ip = ip;
            this.AccountId = accountId;
            this.NodeConfiguration = nodeConfiguration;
            this.Status = status;
            this.NodeId = nodeId;
            this.Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the last seen time of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastSeen")]
        public System.DateTime? LastSeen { get; set; }

        /// <summary>
        /// Gets or sets the registration time of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "registrationTime")]
        public System.DateTime? RegistrationTime { get; set; }

        /// <summary>
        /// Gets or sets the ip of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ip")]
        public string Ip { get; set; }

        /// <summary>
        /// Gets or sets the account id of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountId")]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or sets the configuration of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeConfiguration")]
        public DscNodeConfigurationAssociationProperty NodeConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the status of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the node id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; set; }

        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
