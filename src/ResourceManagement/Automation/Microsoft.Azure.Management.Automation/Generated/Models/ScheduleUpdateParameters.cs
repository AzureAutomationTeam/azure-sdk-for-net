// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The parameters supplied to the update schedule operation.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ScheduleUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleUpdateParameters class.
        /// </summary>
        public ScheduleUpdateParameters()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduleUpdateParameters class.
        /// </summary>
        /// <param name="name">Gets or sets the name of the schedule.</param>
        /// <param name="description">Gets or sets the description of the
        /// schedule.</param>
        /// <param name="isEnabled">Gets or sets a value indicating whether
        /// this schedule is enabled.</param>
        public ScheduleUpdateParameters(string name, string description = default(string), bool? isEnabled = default(bool?))
        {
            this.Name = name;
            this.Description = description;
            this.IsEnabled = isEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the description of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this schedule is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
