// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ActivityOperations.
    /// </summary>
    public static partial class ActivityOperationsExtensions
    {
            /// <summary>
            /// Retrieve the activity in the module identified by module name and activity
            /// name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='moduleName'>
            /// The name of module.
            /// </param>
            /// <param name='activityName'>
            /// The name of activity.
            /// </param>
            public static Activity Get(this IActivityOperations operations, string resourceGroupName, string automationAccountName, string moduleName, string activityName)
            {
                return ((IActivityOperations)operations).GetAsync(resourceGroupName, automationAccountName, moduleName, activityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the activity in the module identified by module name and activity
            /// name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='moduleName'>
            /// The name of module.
            /// </param>
            /// <param name='activityName'>
            /// The name of activity.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Activity> GetAsync(this IActivityOperations operations, string resourceGroupName, string automationAccountName, string moduleName, string activityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, moduleName, activityName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of activities in the module identified by module name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='moduleName'>
            /// The name of module.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<Activity> ListByModule(this IActivityOperations operations, string resourceGroupName, string automationAccountName, string moduleName)
            {
                return ((IActivityOperations)operations).ListByModuleAsync(resourceGroupName, automationAccountName, moduleName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of activities in the module identified by module name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='moduleName'>
            /// The name of module.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Activity>> ListByModuleAsync(this IActivityOperations operations, string resourceGroupName, string automationAccountName, string moduleName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByModuleWithHttpMessagesAsync(resourceGroupName, automationAccountName, moduleName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of activities in the module identified by module name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<Activity> ListByModuleNext(this IActivityOperations operations, string nextPageLink)
            {
                return ((IActivityOperations)operations).ListByModuleNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of activities in the module identified by module name.
            /// <see href="http://aka.ms/azureautomationsdk/activityoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Activity>> ListByModuleNextAsync(this IActivityOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByModuleNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
