// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for JobStreamOperations.
    /// </summary>
    public static partial class JobStreamOperationsExtensions
    {
            /// <summary>
            /// Retrieve the job stream identified by job stream id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='jobId'>
            /// The job id.
            /// </param>
            /// <param name='jobStreamId'>
            /// The job stream id.
            /// </param>
            public static JobStream Get(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobId, string jobStreamId)
            {
                return ((IJobStreamOperations)operations).GetAsync(resourceGroupName, automationAccountName, jobId, jobStreamId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the job stream identified by job stream id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='jobId'>
            /// The job id.
            /// </param>
            /// <param name='jobStreamId'>
            /// The job stream id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<JobStream> GetAsync(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobId, string jobStreamId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobId, jobStreamId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of jobs streams identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='jobId'>
            /// The job Id.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<JobStream> ListByJob(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobId, string filter = default(string))
            {
                return ((IJobStreamOperations)operations).ListByJobAsync(resourceGroupName, automationAccountName, jobId, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of jobs streams identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='jobId'>
            /// The job Id.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<JobStream>> ListByJobAsync(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobId, string filter = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByJobWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobId, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of jobs streams identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static Microsoft.Rest.Azure.IPage<JobStream> ListByJobNext(this IJobStreamOperations operations, string nextPageLink)
            {
                return ((IJobStreamOperations)operations).ListByJobNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of jobs streams identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/jobstreamoperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<JobStream>> ListByJobNextAsync(this IJobStreamOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ListByJobNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
