// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for TestJobsOperations.
    /// </summary>
    public static partial class TestJobsOperationsExtensions
    {
            /// <summary>
            /// Create a test job of the runbook.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the create test job operation.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create test job operation.
            /// </param>
            public static TestJob Create(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, TestJobCreateParameters parameters)
            {
                return ((ITestJobsOperations)operations).CreateAsync(resourceGroupName, automationAccountName, runbookName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a test job of the runbook.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The parameters supplied to the create test job operation.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create test job operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<TestJob> CreateAsync(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, TestJobCreateParameters parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the test job for the specified runbook.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static TestJob Get(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                return ((ITestJobsOperations)operations).GetAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the test job for the specified runbook.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<TestJob> GetAsync(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Resume the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static void Resume(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                ((ITestJobsOperations)operations).ResumeAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resume the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task ResumeAsync(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.ResumeWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Stop the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static void Stop(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                ((ITestJobsOperations)operations).StopAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Stop the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task StopAsync(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.StopWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Suspend the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            public static void Suspend(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName)
            {
                ((ITestJobsOperations)operations).SuspendAsync(resourceGroupName, automationAccountName, runbookName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Suspend the test job.
            /// <see href="http://aka.ms/azureautomationsdk/testjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='automationAccountName'>
            /// The automation account name.
            /// </param>
            /// <param name='runbookName'>
            /// The runbook name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task SuspendAsync(this ITestJobsOperations operations, string resourceGroupName, string automationAccountName, string runbookName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.SuspendWithHttpMessagesAsync(resourceGroupName, automationAccountName, runbookName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
